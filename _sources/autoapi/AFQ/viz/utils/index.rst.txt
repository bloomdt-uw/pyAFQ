:mod:`AFQ.viz.utils`
====================

.. py:module:: AFQ.viz.utils


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   AFQ.viz.utils.Viz



Functions
~~~~~~~~~

.. autoapisummary::

   AFQ.viz.utils.visualize_tract_profiles
   AFQ.viz.utils.visualize_gif_inline


.. py:class:: Viz(backend='fury')


.. function:: visualize_tract_profiles(tract_profiles, scalar='dti_fa', ylim=None, file_name=None, use_fa_ticks=None, positions=POSITIONS)

   Visualize all tract profiles for a scalar in one plot


   :Parameters:

       **tract_profiles** : pandas dataframe
           Pandas dataframe of tract_profiles. For example,
           tract_profiles = pd.read_csv(my_afq.get_tract_profiles()[0])

       **scalar** : string, optional
           Scalar to use in plots. Default: "dti_fa".

       **ylim** : list of 2 floats, optional
           Minimum and maximum value used for y-axis bounds.
           If None, ylim is not set.
           Default: None

       **file_name** : string, optional
           File name to save figure to if not None. Default: None

       **use_fa_ticks** : bool, optional
           Set min and max y limit to 0 and 1, and only use yticks at
           0.2, 0.4, 0.6 . Useful for plotting FA.
           If None, set to evaluation of ("fa" in scalar).
           If ultimately True, takes precedence over ylim.
           Default: None

       **positions** : dictionary, optional
           Dictionary that maps bundle names to position in plot.
           Default: POSITIONS

   :Returns:

       Matplotlib figure and axes.
           ..













   ..
       !! processed by numpydoc !!


.. function:: visualize_gif_inline(fname, use_s3fs=False)

   Display a gif inline, possible from s3fs 
















   ..
       !! processed by numpydoc !!


